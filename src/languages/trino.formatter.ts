import Formatter from 'src/formatter/Formatter';
import Tokenizer from 'src/lexer/Tokenizer';
import { dedupe } from 'src/utils';

/**
 * Priority 5 (last)
 * Full list of reserved functions
 * distinct from Keywords due to interaction with parentheses
 */
// https://github.com/trinodb/trino/tree/432d2897bdef99388c1a47188743a061c4ac1f34/docs/src/main/sphinx/functions
// rg '^\.\. function::' ./docs/src/main/sphinx/functions | cut -d' ' -f 3 | cut -d '(' -f 1 | sort | uniq
// rg '\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep    '\* :func:' | cut -d'`' -f 2
// rg '\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep -v '\* :func:'
// grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep  -e '^- :func:' | cut -d'`' -f2
// grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep -ve '^- :func:'
const reservedFunctions = [
  'ABS',
  'ACOS',
  'ALL_MATCH',
  'ANY_MATCH',
  'APPROX_DISTINCT',
  'APPROX_MOST_FREQUENT',
  'APPROX_PERCENTILE',
  'APPROX_SET',
  'ARBITRARY',
  'ARRAYS_OVERLAP',
  'ARRAY_AGG',
  'ARRAY_DISTINCT',
  'ARRAY_EXCEPT',
  'ARRAY_INTERSECT',
  'ARRAY_JOIN',
  'ARRAY_MAX',
  'ARRAY_MIN',
  'ARRAY_POSITION',
  'ARRAY_REMOVE',
  'ARRAY_SORT',
  'ARRAY_UNION',
  'ASIN',
  'ATAN',
  'ATAN2',
  'AT_TIMEZONE',
  'AVG',
  'BAR',
  'BETA_CDF',
  'BING_TILE',
  'BING_TILES_AROUND',
  'BING_TILE_AT',
  'BING_TILE_COORDINATES',
  'BING_TILE_POLYGON',
  'BING_TILE_QUADKEY',
  'BING_TILE_ZOOM_LEVEL',
  'BITWISE_AND',
  'BITWISE_AND_AGG',
  'BITWISE_LEFT_SHIFT',
  'BITWISE_NOT',
  'BITWISE_OR',
  'BITWISE_OR_AGG',
  'BITWISE_RIGHT_SHIFT',
  'BITWISE_RIGHT_SHIFT_ARITHMETIC',
  'BITWISE_XOR',
  'BIT_COUNT',
  'BOOL_AND',
  'BOOL_OR',
  'CARDINALITY',
  'CAST',
  'CBRT',
  'CEIL',
  'CEILING',
  'CHAR2HEXINT',
  'CHECKSUM',
  'CHR',
  'CLASSIFY',
  'COALESCE',
  'CODEPOINT',
  'COLOR',
  'COMBINATIONS',
  'CONCAT',
  'CONCAT_WS',
  'CONTAINS',
  'CONTAINS_SEQUENCE',
  'CONVEX_HULL_AGG',
  'CORR',
  'COS',
  'COSH',
  'COSINE_SIMILARITY',
  'COUNT',
  'COUNT_IF',
  'COVAR_POP',
  'COVAR_SAMP',
  'CRC32',
  'CUME_DIST',
  'CURRENT_CATALOG',
  'CURRENT_DATE',
  'CURRENT_GROUPS',
  'CURRENT_SCHEMA',
  'CURRENT_TIME',
  'CURRENT_TIMESTAMP',
  'CURRENT_TIMEZONE',
  'CURRENT_USER',
  'DATE',
  'DATE_ADD',
  'DATE_DIFF',
  'DATE_FORMAT',
  'DATE_PARSE',
  'DATE_TRUNC',
  'DAY',
  'DAY_OF_MONTH',
  'DAY_OF_WEEK',
  'DAY_OF_YEAR',
  'DEGREES',
  'DENSE_RANK',
  'DOW',
  'DOY',
  'E',
  'ELEMENT_AT',
  'EMPTY_APPROX_SET',
  'EVALUATE_CLASSIFIER_PREDICTIONS',
  'EVERY',
  'EXP',
  'EXTRACT',
  'FEATURES',
  'FILTER',
  'FIRST_VALUE',
  'FLATTEN',
  'FLOOR',
  'FORMAT',
  'FORMAT_DATETIME',
  'FORMAT_NUMBER',
  'FROM_BASE',
  'FROM_BASE32',
  'FROM_BASE64',
  'FROM_BASE64URL',
  'FROM_BIG_ENDIAN_32',
  'FROM_BIG_ENDIAN_64',
  'FROM_ENCODED_POLYLINE',
  'FROM_GEOJSON_GEOMETRY',
  'FROM_HEX',
  'FROM_IEEE754_32',
  'FROM_IEEE754_64',
  'FROM_ISO8601_DATE',
  'FROM_ISO8601_TIMESTAMP',
  'FROM_ISO8601_TIMESTAMP_NANOS',
  'FROM_UNIXTIME',
  'FROM_UNIXTIME_NANOS',
  'FROM_UTF8',
  'GEOMETRIC_MEAN',
  'GEOMETRY_FROM_HADOOP_SHAPE',
  'GEOMETRY_INVALID_REASON',
  'GEOMETRY_NEAREST_POINTS',
  'GEOMETRY_TO_BING_TILES',
  'GEOMETRY_UNION',
  'GEOMETRY_UNION_AGG',
  'GREATEST',
  'GREAT_CIRCLE_DISTANCE',
  'HAMMING_DISTANCE',
  'HASH_COUNTS',
  'HISTOGRAM',
  'HMAC_MD5',
  'HMAC_SHA1',
  'HMAC_SHA256',
  'HMAC_SHA512',
  'HOUR',
  'HUMAN_READABLE_SECONDS',
  'IF',
  'INDEX',
  'INFINITY',
  'INTERSECTION_CARDINALITY',
  'INVERSE_BETA_CDF',
  'INVERSE_NORMAL_CDF',
  'IS_FINITE',
  'IS_INFINITE',
  'IS_JSON_SCALAR',
  'IS_NAN',
  'JACCARD_INDEX',
  'JSON_ARRAY_CONTAINS',
  'JSON_ARRAY_GET',
  'JSON_ARRAY_LENGTH',
  'JSON_EXISTS',
  'JSON_EXTRACT',
  'JSON_EXTRACT_SCALAR',
  'JSON_FORMAT',
  'JSON_PARSE',
  'JSON_QUERY',
  'JSON_SIZE',
  'JSON_VALUE',
  'KURTOSIS',
  'LAG',
  'LAST_DAY_OF_MONTH',
  'LAST_VALUE',
  'LEAD',
  'LEARN_CLASSIFIER',
  'LEARN_LIBSVM_CLASSIFIER',
  'LEARN_LIBSVM_REGRESSOR',
  'LEARN_REGRESSOR',
  'LEAST',
  'LENGTH',
  'LEVENSHTEIN_DISTANCE',
  'LINE_INTERPOLATE_POINT',
  'LINE_INTERPOLATE_POINTS',
  'LINE_LOCATE_POINT',
  'LISTAGG',
  'LN',
  'LOCALTIME',
  'LOCALTIMESTAMP',
  'LOG',
  'LOG10',
  'LOG2',
  'LOWER',
  'LPAD',
  'LTRIM',
  'LUHN_CHECK',
  'MAKE_SET_DIGEST',
  'MAP',
  'MAP_AGG',
  'MAP_CONCAT',
  'MAP_ENTRIES',
  'MAP_FILTER',
  'MAP_FROM_ENTRIES',
  'MAP_KEYS',
  'MAP_UNION',
  'MAP_VALUES',
  'MAP_ZIP_WITH',
  'MAX',
  'MAX_BY',
  'MD5',
  'MERGE',
  'MERGE_SET_DIGEST',
  'MILLISECOND',
  'MIN',
  'MINUTE',
  'MIN_BY',
  'MOD',
  'MONTH',
  'MULTIMAP_AGG',
  'MULTIMAP_FROM_ENTRIES',
  'MURMUR3',
  'NAN',
  'NGRAMS',
  'NONE_MATCH',
  'NORMALIZE',
  'NORMAL_CDF',
  'NOW',
  'NTH_VALUE',
  'NTILE',
  'NULLIF',
  'NUMERIC_HISTOGRAM',
  'OBJECTID',
  'OBJECTID_TIMESTAMP',
  'PARSE_DATA_SIZE',
  'PARSE_DATETIME',
  'PARSE_DURATION',
  'PERCENT_RANK',
  'PI',
  'POSITION',
  'POW',
  'POWER',
  'QDIGEST_AGG',
  'QUARTER',
  'RADIANS',
  'RAND',
  'RANDOM',
  'RANK',
  'REDUCE',
  'REDUCE_AGG',
  'REGEXP_COUNT',
  'REGEXP_EXTRACT',
  'REGEXP_EXTRACT_ALL',
  'REGEXP_LIKE',
  'REGEXP_POSITION',
  'REGEXP_REPLACE',
  'REGEXP_SPLIT',
  'REGRESS',
  'REGR_INTERCEPT',
  'REGR_SLOPE',
  'RENDER',
  'REPEAT',
  'REPLACE',
  'REVERSE',
  'RGB',
  'ROUND',
  'ROW_NUMBER',
  'RPAD',
  'RTRIM',
  'SECOND',
  'SEQUENCE',
  'SHA1',
  'SHA256',
  'SHA512',
  'SHUFFLE',
  'SIGN',
  'SIMPLIFY_GEOMETRY',
  'SIN',
  'SKEWNESS',
  'SLICE',
  'SOUNDEX',
  'SPATIAL_PARTITIONING',
  'SPATIAL_PARTITIONS',
  'SPLIT',
  'SPLIT_PART',
  'SPLIT_TO_MAP',
  'SPLIT_TO_MULTIMAP',
  'SPOOKY_HASH_V2_32',
  'SPOOKY_HASH_V2_64',
  'SQRT',
  'STARTS_WITH',
  'STDDEV',
  'STDDEV_POP',
  'STDDEV_SAMP',
  'STRPOS',
  'ST_AREA',
  'ST_ASBINARY',
  'ST_ASTEXT',
  'ST_BOUNDARY',
  'ST_BUFFER',
  'ST_CENTROID',
  'ST_CONTAINS',
  'ST_CONVEXHULL',
  'ST_COORDDIM',
  'ST_CROSSES',
  'ST_DIFFERENCE',
  'ST_DIMENSION',
  'ST_DISJOINT',
  'ST_DISTANCE',
  'ST_ENDPOINT',
  'ST_ENVELOPE',
  'ST_ENVELOPEASPTS',
  'ST_EQUALS',
  'ST_EXTERIORRING',
  'ST_GEOMETRIES',
  'ST_GEOMETRYFROMTEXT',
  'ST_GEOMETRYN',
  'ST_GEOMETRYTYPE',
  'ST_GEOMFROMBINARY',
  'ST_INTERIORRINGN',
  'ST_INTERIORRINGS',
  'ST_INTERSECTION',
  'ST_INTERSECTS',
  'ST_ISCLOSED',
  'ST_ISEMPTY',
  'ST_ISRING',
  'ST_ISSIMPLE',
  'ST_ISVALID',
  'ST_LENGTH',
  'ST_LINEFROMTEXT',
  'ST_LINESTRING',
  'ST_MULTIPOINT',
  'ST_NUMGEOMETRIES',
  'ST_NUMINTERIORRING',
  'ST_NUMPOINTS',
  'ST_OVERLAPS',
  'ST_POINT',
  'ST_POINTN',
  'ST_POINTS',
  'ST_POLYGON',
  'ST_RELATE',
  'ST_STARTPOINT',
  'ST_SYMDIFFERENCE',
  'ST_TOUCHES',
  'ST_UNION',
  'ST_WITHIN',
  'ST_X',
  'ST_XMAX',
  'ST_XMIN',
  'ST_Y',
  'ST_YMAX',
  'ST_YMIN',
  'SUBSTR',
  'SUBSTRING',
  'SUM',
  'TAN',
  'TANH',
  'TDIGEST_AGG',
  'TIMESTAMP_OBJECTID',
  'TIMEZONE_HOUR',
  'TIMEZONE_MINUTE',
  'TO_BASE',
  'TO_BASE32',
  'TO_BASE64',
  'TO_BASE64URL',
  'TO_BIG_ENDIAN_32',
  'TO_BIG_ENDIAN_64',
  'TO_CHAR',
  'TO_DATE',
  'TO_ENCODED_POLYLINE',
  'TO_GEOJSON_GEOMETRY',
  'TO_GEOMETRY',
  'TO_HEX',
  'TO_IEEE754_32',
  'TO_IEEE754_64',
  'TO_ISO8601',
  'TO_MILLISECONDS',
  'TO_SPHERICAL_GEOGRAPHY',
  'TO_TIMESTAMP',
  'TO_UNIXTIME',
  'TO_UTF8',
  'TRANSFORM',
  'TRANSFORM_KEYS',
  'TRANSFORM_VALUES',
  'TRANSLATE',
  'TRIM',
  'TRIM_ARRAY',
  'TRUNCATE',
  'TRY',
  'TRY_CAST',
  'TYPEOF',
  'UPPER',
  'URL_DECODE',
  'URL_ENCODE',
  'URL_EXTRACT_FRAGMENT',
  'URL_EXTRACT_HOST',
  'URL_EXTRACT_PARAMETER',
  'URL_EXTRACT_PATH',
  'URL_EXTRACT_PORT',
  'URL_EXTRACT_PROTOCOL',
  'URL_EXTRACT_QUERY',
  'UUID',
  'VALUES_AT_QUANTILES',
  'VALUE_AT_QUANTILE',
  'VARIANCE',
  'VAR_POP',
  'VAR_SAMP',
  'VERSION',
  'WEEK',
  'WEEK_OF_YEAR',
  'WIDTH_BUCKET',
  'WILSON_INTERVAL_LOWER',
  'WILSON_INTERVAL_UPPER',
  'WITH_TIMEZONE',
  'WORD_STEM',
  'XXHASH64',
  'YEAR',
  'YEAR_OF_WEEK',
  'YOW',
  'ZIP',
  'ZIP_WITH',
];

/**
 * Priority 5 (last)
 * Full list of reserved words
 * any words that are in a higher priority are removed
 */
// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L858-L1128
// +SKIP
//
const reservedKeywords = [
  'ABSENT',
  'ADD',
  'ADMIN',
  'AFTER',
  'ALL',
  'ALTER',
  'ANALYZE',
  // 'AND',
  'ANY',
  'ARRAY',
  'AS',
  'ASC',
  'AT',
  'AUTHORIZATION',
  'BERNOULLI',
  'BETWEEN',
  'BOTH',
  'BY',
  'CALL',
  'CASCADE',
  'CASE',
  'CATALOGS',
  'COLUMN',
  'COLUMNS',
  'COMMENT',
  'COMMIT',
  'COMMITTED',
  'CONDITIONAL',
  'CONSTRAINT',
  'COPARTITION',
  'CREATE',
  'CROSS',
  'CUBE',
  'CURRENT',
  'CURRENT_PATH',
  'CURRENT_ROLE',
  'DATA',
  'DEALLOCATE',
  'DEFAULT',
  'DEFINE',
  'DEFINER',
  'DELETE',
  'DENY',
  'DESC',
  'DESCRIBE',
  'DESCRIPTOR',
  'DISTINCT',
  'DISTRIBUTED',
  'DOUBLE',
  'DROP',
  'ELSE',
  'EMPTY',
  'ENCODING',
  'END',
  'ERROR',
  'ESCAPE',
  'EXCEPT',
  'EXCLUDING',
  'EXECUTE',
  'EXISTS',
  'EXPLAIN',
  'FALSE',
  'FETCH',
  'FINAL',
  'FIRST',
  'FOLLOWING',
  'FOR',
  'FROM',
  'FULL',
  'FUNCTIONS',
  'GRANT',
  'GRANTED',
  'GRANTS',
  'GRAPHVIZ',
  'GROUP',
  'GROUPING',
  'GROUPS',
  'HAVING',
  'IGNORE',
  'IN',
  'INCLUDING',
  'INITIAL',
  'INNER',
  'INPUT',
  'INSERT',
  'INTERSECT',
  'INTERVAL',
  'INTO',
  'INVOKER',
  'IO',
  'IS',
  'ISOLATION',
  'JOIN',
  'JSON',
  'JSON_ARRAY',
  'JSON_OBJECT',
  'KEEP',
  'KEY',
  'KEYS',
  'LAST',
  'LATERAL',
  'LEADING',
  'LEFT',
  'LEVEL',
  'LIKE',
  'LIMIT',
  'LOCAL',
  'LOGICAL',
  'MATCH',
  'MATCHED',
  'MATCHES',
  'MATCH_RECOGNIZE',
  'MATERIALIZED',
  'MEASURES',
  'NATURAL',
  'NEXT',
  'NFC',
  'NFD',
  'NFKC',
  'NFKD',
  'NO',
  'NONE',
  'NOT',
  'NULL',
  'NULLS',
  'OBJECT',
  'OF',
  'OFFSET',
  'OMIT',
  'ON',
  'ONE',
  'ONLY',
  'OPTION',
  // 'OR',
  'ORDER',
  'ORDINALITY',
  'OUTER',
  'OUTPUT',
  'OVER',
  'OVERFLOW',
  'PARTITION',
  'PARTITIONS',
  'PASSING',
  'PAST',
  'PATH',
  'PATTERN',
  'PER',
  'PERMUTE',
  'PRECEDING',
  'PRECISION',
  'PREPARE',
  'PRIVILEGES',
  'PROPERTIES',
  'PRUNE',
  'QUOTES',
  'RANGE',
  'READ',
  'RECURSIVE',
  'REFRESH',
  'RENAME',
  'REPEATABLE',
  'RESET',
  'RESPECT',
  'RESTRICT',
  'RETURNING',
  'REVOKE',
  'RIGHT',
  'ROLE',
  'ROLES',
  'ROLLBACK',
  'ROLLUP',
  'ROW',
  'ROWS',
  'RUNNING',
  'SCALAR',
  'SCHEMA',
  'SCHEMAS',
  'SECURITY',
  'SEEK',
  'SELECT',
  'SERIALIZABLE',
  'SESSION',
  'SET',
  'SETS',
  'SHOW',
  'SKIP',
  'SOME',
  'START',
  'STATS',
  'STRING',
  'SUBSET',
  'SYSTEM',
  'TABLE',
  'TABLES',
  'TABLESAMPLE',
  'TEXT',
  'THEN',
  'TIES',
  'TIME',
  'TIMESTAMP',
  'TO',
  'TRAILING',
  'TRANSACTION',
  'TRUE',
  'TYPE',
  'UESCAPE',
  'UNBOUNDED',
  'UNCOMMITTED',
  'UNCONDITIONAL',
  'UNION',
  'UNIQUE',
  'UNKNOWN',
  'UNMATCHED',
  'UNNEST',
  'UPDATE',
  'USE',
  'USER',
  'USING',
  'UTF16',
  'UTF32',
  'UTF8',
  'VALIDATE',
  'VALUE',
  'VALUES',
  'VERBOSE',
  'VIEW',
  'WHEN',
  'WHERE',
  'WINDOW',
  'WITH',
  'WITHIN',
  'WITHOUT',
  'WORK',
  'WRAPPER',
  'WRITE',
  'ZONE',
  // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java#L131-L168
  // or https://trino.io/docs/current/language/types.html
  'BIGINT',
  'INT',
  'INTEGER',
  'SMALLINT',
  'TINYINT',
  'BOOLEAN',
  'DATE',
  'DECIMAL',
  'REAL',
  'DOUBLE',
  'HYPERLOGLOG',
  'QDIGEST',
  'TDIGEST',
  'P4HYPERLOGLOG',
  'INTERVAL',
  'TIMESTAMP',
  'TIME',
  'VARBINARY',
  'VARCHAR',
  'CHAR',
  'ROW',
  'ARRAY',
  'MAP',
  'JSON',
  'JSON2016',
  'IPADDRESS',
  'GEOMETRY',
  'UUID',
  'SETDIGEST',
  'JONIREGEXP',
  'RE2JREGEXP',
  'LIKEPATTERN',
  'COLOR',
  'CODEPOINTS',
  'FUNCTION',
  'JSONPATH',
];

/**
 * Priority 1 (first)
 * keywords that begin a new statement
 * will begin new indented block
 */
// TODO
// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L41
const reservedCommands = [
  // DDL
  'ALTER SCHEMA',
  'ALTER TABLE',
  'ALTER MATERIALIZED VIEW',
  'ALTER VIEW',
  'CREATE SCHEMA',
  'CREATE TABLE',
  'CREATE VIEW',
  'CREATE OR REPLACE VIEW',
  'CREATE MATERIALIZED VIEW',
  'CREATE OR REPLACE MATERIALIZED VIEW',
  'CREATE ROLE',
  'DROP SCHEMA',
  'DROP TABLE',
  'DROP COLUMN',
  'DROP MATERIALIZED VIEW',
  'DROP VIEW',
  'DROP ROLE',
  'TRUNCATE TABLE',
  'USE', // TODO?
  // DML
  'INSERT INTO',
  'VALUES',
  'UPDATE',
  'SET',
  'DELETE FROM',
  // Data Retrieval
  'WITH',
  'SELECT',
  'FROM',
  'WHERE',
  'GROUP BY',
  'HAVING',
  'WINDOW', // verify
  'ORDER BY',
  'OFFSET',
  'LIMIT',
  'FETCH',

  'PARTITION BY', // verify
  'TABLESAMPLE',
  'EXPLAIN',
  // Auxiliary
  'ANALYZE',

  'COMMENT ON TABLE',
  'COMMENT ON COLUMN',
  'DESCRIBE INPUT',
  'DESCRIBE OUTPUT',

  'REFRESH MATERIALIZED VIEW',
  'RESET SESSION',
  // 'SET SESSION', // TODO

  'SHOW GRANTS',
  'SHOW CREATE TABLE',
  'SHOW CREATE SCHEMA',
  'SHOW CREATE VIEW',
  'SHOW CREATE MATERIALIZED VIEW',
  'SHOW TABLES',
  'SHOW SCHEMAS',
  'SHOW CATALOGS',
  'SHOW COLUMNS',
  'SHOW STATS FOR',
  'SHOW ROLES',
  'SHOW CURRENT ROLES',
  'SHOW ROLE GRANTS',
  'SHOW FUNCTIONS',
  'SHOW SESSION',

  // other
  'LATERAL', // verify
];

// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L231-L235
// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L288-L291
const reservedBinaryCommands = [
  // set booleans
  'INTERSECT',
  'INTERSECT ALL',
  'INTERSECT DISTINCT',
  'UNION',
  'UNION ALL',
  'UNION DISTINCT',
  'EXCEPT',
  'EXCEPT ALL',
  'EXCEPT DISTINCT',
];

// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L299-L313
const reservedJoins = [
  'JOIN',
  'INNER JOIN',
  'LEFT JOIN',
  'LEFT OUTER JOIN',
  'RIGHT JOIN',
  'RIGHT OUTER JOIN',
  'FULL JOIN',
  'FULL OUTER JOIN',
  'CROSS JOIN',
  'NATURAL JOIN',
  'NATURAL INNER JOIN',
  'NATURAL LEFT JOIN',
  'NATURAL LEFT OUTER JOIN',
  'NATURAL RIGHT JOIN',
  'NATURAL RIGHT OUTER JOIN',
  'NATURAL FULL JOIN',
  'NATURAL FULL OUTER JOIN',
];

/**
 * Priority 3
 * keywords that follow a previous Statement, must be attached to subsequent data
 * can be fully inline or on newline with optional indent
 */
// TODO
const reservedDependentClauses = ['WHEN', 'ELSE'];

export default class TrinoFormatter extends Formatter {
  // https://trino.io/docs/current/functions/list.html#id1
  // TODO: [] substring operator?
  static operators = ['||', '<', '>', '<=', '>=', '=', '<>', '!=', '->', '+', '-', '*', '/', '%'];

  tokenizer() {
    return new Tokenizer({
      reservedCommands,
      reservedBinaryCommands,
      reservedJoins,
      reservedDependentClauses,
      reservedKeywords: dedupe([...reservedKeywords, ...reservedFunctions]),
      openParens: ['(', '['],
      closeParens: [')', ']'],
      stringTypes: [{ quote: "''", prefixes: ['U&', 'X'] }],
      identTypes: ['""', '``'],
      positionalParams: true,
      operators: TrinoFormatter.operators,
    });
  }
}
