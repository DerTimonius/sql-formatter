// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser parses BETWEEN expression 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "text": "age",
            "type": "identifier",
          },
          Object {
            "andToken": Object {
              "end": 24,
              "precedingWhitespace": " ",
              "raw": "AND",
              "start": 21,
              "text": "AND",
              "type": "AND",
            },
            "betweenToken": Object {
              "end": 17,
              "precedingWhitespace": " ",
              "raw": "BETWEEN",
              "start": 10,
              "text": "BETWEEN",
              "type": "BETWEEN",
            },
            "expr1": Array [
              Object {
                "text": "18",
                "type": "literal",
              },
            ],
            "expr2": Array [
              Object {
                "text": "63",
                "type": "literal",
              },
            ],
            "type": "between_predicate",
          },
        ],
        "name": Object {
          "raw": "WHERE",
          "text": "WHERE",
          "tokenType": "RESERVED_COMMAND",
          "type": "keyword",
        },
        "type": "clause",
      },
    ],
    "hasSemicolon": false,
    "type": "statement",
  },
]
`;

exports[`Parser parses LIMIT clause with count 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "count": Array [
          Object {
            "text": "15",
            "type": "literal",
          },
        ],
        "limitToken": Object {
          "end": 5,
          "precedingWhitespace": undefined,
          "raw": "LIMIT",
          "start": 0,
          "text": "LIMIT",
          "type": "LIMIT",
        },
        "type": "limit_clause",
      },
    ],
    "hasSemicolon": true,
    "type": "statement",
  },
]
`;

exports[`Parser parses LIMIT clause with longer expressions 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "count": Array [
          Object {
            "text": "3",
            "type": "literal",
          },
          Object {
            "text": "*",
            "type": "operator",
          },
          Object {
            "text": "2",
            "type": "literal",
          },
        ],
        "limitToken": Object {
          "end": 5,
          "precedingWhitespace": undefined,
          "raw": "LIMIT",
          "start": 0,
          "text": "LIMIT",
          "type": "LIMIT",
        },
        "offset": Array [
          Object {
            "text": "50",
            "type": "literal",
          },
          Object {
            "text": "+",
            "type": "operator",
          },
          Object {
            "text": "50",
            "type": "literal",
          },
        ],
        "type": "limit_clause",
      },
    ],
    "hasSemicolon": true,
    "type": "statement",
  },
]
`;

exports[`Parser parses LIMIT clause with offset and count 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "count": Array [
          Object {
            "text": "15",
            "type": "literal",
          },
        ],
        "limitToken": Object {
          "end": 5,
          "precedingWhitespace": undefined,
          "raw": "LIMIT",
          "start": 0,
          "text": "LIMIT",
          "type": "LIMIT",
        },
        "offset": Array [
          Object {
            "text": "100",
            "type": "literal",
          },
        ],
        "type": "limit_clause",
      },
    ],
    "hasSemicolon": true,
    "type": "statement",
  },
]
`;

exports[`Parser parses SELECT * 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "type": "all_columns_asterisk",
          },
        ],
        "name": Object {
          "raw": "SELECT",
          "text": "SELECT",
          "tokenType": "RESERVED_SELECT",
          "type": "keyword",
        },
        "type": "clause",
      },
    ],
    "hasSemicolon": false,
    "type": "statement",
  },
]
`;

exports[`Parser parses array subscript 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "arrayToken": Object {
              "end": 15,
              "precedingWhitespace": " ",
              "raw": "my_array",
              "start": 7,
              "text": "my_array",
              "type": "ARRAY_IDENTIFIER",
            },
            "parenthesis": Object {
              "children": Array [
                Object {
                  "text": "5",
                  "type": "literal",
                },
              ],
              "closeParen": "]",
              "openParen": "[",
              "type": "parenthesis",
            },
            "type": "array_subscript",
          },
        ],
        "name": Object {
          "raw": "SELECT",
          "text": "SELECT",
          "tokenType": "RESERVED_SELECT",
          "type": "keyword",
        },
        "type": "clause",
      },
    ],
    "hasSemicolon": false,
    "type": "statement",
  },
]
`;

exports[`Parser parses curly braces 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "foo",
                "type": "identifier",
              },
              Object {
                "text": ":",
                "type": "operator",
              },
              Object {
                "text": "bar",
                "type": "identifier",
              },
            ],
            "closeParen": "}",
            "openParen": "{",
            "type": "parenthesis",
          },
        ],
        "name": Object {
          "raw": "SELECT",
          "text": "SELECT",
          "tokenType": "RESERVED_SELECT",
          "type": "keyword",
        },
        "type": "clause",
      },
    ],
    "hasSemicolon": true,
    "type": "statement",
  },
]
`;

exports[`Parser parses function call 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "nameToken": Object {
              "end": 11,
              "precedingWhitespace": " ",
              "raw": "sqrt",
              "start": 7,
              "text": "SQRT",
              "type": "RESERVED_FUNCTION_NAME",
            },
            "parenthesis": Object {
              "children": Array [
                Object {
                  "text": "2",
                  "type": "literal",
                },
              ],
              "closeParen": ")",
              "openParen": "(",
              "type": "parenthesis",
            },
            "type": "function_call",
          },
        ],
        "name": Object {
          "raw": "SELECT",
          "text": "SELECT",
          "tokenType": "RESERVED_SELECT",
          "type": "keyword",
        },
        "type": "clause",
      },
    ],
    "hasSemicolon": false,
    "type": "statement",
  },
]
`;

exports[`Parser parses function name with and without parameters 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "raw": "CURRENT_TIME",
            "text": "CURRENT_TIME",
            "tokenType": "RESERVED_KEYWORD",
            "type": "keyword",
          },
          Object {
            "text": "a",
            "type": "identifier",
          },
          Object {
            "type": "comma",
          },
          Object {
            "nameToken": Object {
              "end": 35,
              "precedingWhitespace": " ",
              "raw": "CURRENT_TIME",
              "start": 23,
              "text": "CURRENT_TIME",
              "type": "RESERVED_FUNCTION_NAME",
            },
            "parenthesis": Object {
              "children": Array [],
              "closeParen": ")",
              "openParen": "(",
              "type": "parenthesis",
            },
            "type": "function_call",
          },
          Object {
            "text": "b",
            "type": "identifier",
          },
        ],
        "name": Object {
          "raw": "SELECT",
          "text": "SELECT",
          "tokenType": "RESERVED_SELECT",
          "type": "keyword",
        },
        "type": "clause",
      },
    ],
    "hasSemicolon": true,
    "type": "statement",
  },
]
`;

exports[`Parser parses list of statements 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "text": "foo",
        "type": "identifier",
      },
    ],
    "hasSemicolon": true,
    "type": "statement",
  },
  Object {
    "children": Array [
      Object {
        "text": "bar",
        "type": "identifier",
      },
    ],
    "hasSemicolon": false,
    "type": "statement",
  },
]
`;

exports[`Parser parses parenthesized expressions 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "birth_year",
                "type": "identifier",
              },
              Object {
                "text": "-",
                "type": "operator",
              },
              Object {
                "children": Array [
                  Object {
                    "text": "CURRENT_DATE",
                    "type": "identifier",
                  },
                  Object {
                    "text": "+",
                    "type": "operator",
                  },
                  Object {
                    "text": "1",
                    "type": "literal",
                  },
                ],
                "closeParen": ")",
                "openParen": "(",
                "type": "parenthesis",
              },
            ],
            "closeParen": ")",
            "openParen": "(",
            "type": "parenthesis",
          },
        ],
        "name": Object {
          "raw": "SELECT",
          "text": "SELECT",
          "tokenType": "RESERVED_SELECT",
          "type": "keyword",
        },
        "type": "clause",
      },
    ],
    "hasSemicolon": false,
    "type": "statement",
  },
]
`;

exports[`Parser parses set operations 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "text": "foo",
            "type": "identifier",
          },
        ],
        "name": Object {
          "raw": "SELECT",
          "text": "SELECT",
          "tokenType": "RESERVED_SELECT",
          "type": "keyword",
        },
        "type": "clause",
      },
      Object {
        "children": Array [
          Object {
            "text": "bar",
            "type": "identifier",
          },
        ],
        "name": Object {
          "raw": "FROM",
          "text": "FROM",
          "tokenType": "RESERVED_COMMAND",
          "type": "keyword",
        },
        "type": "clause",
      },
      Object {
        "children": Array [],
        "nameToken": Object {
          "end": 29,
          "precedingWhitespace": " ",
          "raw": "UNION ALL",
          "start": 20,
          "text": "UNION ALL",
          "type": "RESERVED_SET_OPERATION",
        },
        "type": "set_operation",
      },
      Object {
        "children": Array [
          Object {
            "text": "foo",
            "type": "identifier",
          },
        ],
        "name": Object {
          "raw": "SELECT",
          "text": "SELECT",
          "tokenType": "RESERVED_SELECT",
          "type": "keyword",
        },
        "type": "clause",
      },
      Object {
        "children": Array [
          Object {
            "text": "baz",
            "type": "identifier",
          },
        ],
        "name": Object {
          "raw": "FROM",
          "text": "FROM",
          "tokenType": "RESERVED_COMMAND",
          "type": "keyword",
        },
        "type": "clause",
      },
    ],
    "hasSemicolon": false,
    "type": "statement",
  },
]
`;

exports[`Parser parses square brackets 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "1",
                "type": "literal",
              },
              Object {
                "type": "comma",
              },
              Object {
                "text": "2",
                "type": "literal",
              },
              Object {
                "type": "comma",
              },
              Object {
                "text": "3",
                "type": "literal",
              },
            ],
            "closeParen": "]",
            "openParen": "[",
            "type": "parenthesis",
          },
        ],
        "name": Object {
          "raw": "SELECT",
          "text": "SELECT",
          "tokenType": "RESERVED_SELECT",
          "type": "keyword",
        },
        "type": "clause",
      },
    ],
    "hasSemicolon": true,
    "type": "statement",
  },
]
`;
